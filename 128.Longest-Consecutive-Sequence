/*
Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

Your algorithm should run in O(n) complexity.

Example:

Input: [100, 4, 200, 1, 3, 2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
*/


class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        if(nums.empty()) return 0;
        unordered_set<int> ns;
        for(int i = 0; i < nums.size(); i++){
            ns.insert(nums[i]);
        }
        int max = 0;
        for(int i = 0; i < nums.size(); i++){
            int left = nums[i];
            int right = nums[i] + 1;
            int count = 0;
            while(ns.find(left) != ns.end()){
                ns.erase(left);
                count++;
                left--;
            }
            while(ns.find(right) != ns.end()){
                ns.erase(right);
                count++;
                right++;
            }
            if(count>max) max = count;
        }
        return max;
    }
};
