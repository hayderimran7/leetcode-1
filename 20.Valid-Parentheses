/*
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.
*/

bool isValid(string s) {
        stack<char> stk;
        for(int i = 0; i < s.length(); i++){
            char t = s[i];
            if(stk.empty()) {
                if(t == ')' || t == ']' || t == '}') return false;
                else stk.push(t);
            }
            else {
                if(t == '(' || t == '[' || t == '{') {stk.push(t); continue;}
                if((stk.top() == '(' && t == ')')
                || (stk.top() == '[' && t == ']')
                || (stk.top() == '{' && t == '}')) stk.pop();
                else
                    return false;
            }
        }
        return stk.empty();
    }

