/*
You need to find the largest value in each row of a binary tree.

Example:

Input: 

          1
         / \
        3   2
       / \   \  
      5   3   9 

Output: [1, 3, 9]

*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> res;
        helper(root,res,0);
        return res;
    }
    //d is depth
    void helper(TreeNode* root, vector<int>& res, int d) {
        if(!root) return;
        
        if(d == res.size()) {
            res.push_back(root->val);
        } else {
            res[d]=max(res[d], root->val);
        }
        helper(root->left, res, d+1);
        helper(root->right, res, d+1);
    }
};
