/*
Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

Example 1:

Input: s1 = "aabcc", s2 = "dbbca", s3 = "aadbbcbcac"
Output: true
Example 2:

Input: s1 = "aabcc", s2 = "dbbca", s3 = "aadbbbaccc"
Output: false
*/

// DP for s3 is interleaving at (i+j)th position when s1 is at ith position, and s2 is at jth position

class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        if(s1.empty()) return s2==s3;
        else if(s2.empty()) return s1==s3;
        
        if(s3.size() != s1.size()+s2.size()) return false;
        
        int len1 = s1.size();
        int len2 = s2.size();
        vector<vector<bool>> dp(len1+1, vector<bool>(len2+1, false));

        for(int i = 0; i <= len1; i++){
            for(int j = 0; j <= len2; j++){
                if(i==0 && j==0) dp[i][j] = true;
                else if(i == 0)
                    dp[i][j] = ( dp[i][j-1] && s2[j-1] == s3[j-1]);
                else if(j == 0)
                    dp[i][j] = ( dp[i-1][j] && s1[i-1] == s3[i-1]);
                else 
                    dp[i][j] = (dp[i-1][j] && s1[i-1] == s3[i+j-1] ) || (dp[i][j-1] && s2[j-1] == s3[i+j-1] );
            }
        }
        
        return dp[len1][len2];
    }
    
};
