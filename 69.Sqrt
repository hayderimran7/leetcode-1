/*
Implement int sqrt(int x).

Compute and return the square root of x, where x is guaranteed to be a non-negative integer.

Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.

Example 1:

Input: 4
Output: 2
Example 2:

Input: 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since 
             the decimal part is truncated, 2 is returned.
*/

class Solution {
public:
    int mySqrt(int x) {
        
        unsigned long long begin = 0;
        unsigned long long end = (x+1)/2;
        unsigned long long rst;
        unsigned long long mid;
        
        while(begin < end){
            
            mid = (begin + end)/2;
            rst = mid*mid;
            
            if(rst == x) return mid;
            else if(rst > x) end = mid-1;
            else begin = mid+1;
        }
        rst = end*end;
        return rst > x ? end-1 : end;
    }
};
