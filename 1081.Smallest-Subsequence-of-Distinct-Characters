/*
Return the lexicographically smallest subsequence of text that contains all the distinct characters of text exactly once.

 

Example 1:

Input: "cdadabcc"
Output: "adbc"
Example 2:

Input: "abcd"
Output: "abcd"
Example 3:

Input: "ecbacba"
Output: "eacb"
Example 4:

Input: "leetcode"
Output: "letcod"
 

Note:

1 <= text.length <= 1000
text consists of lowercase English letters.
*/

class Solution {
public:
    string smallestSubsequence(string text) {
        string res;
        int count[26] = {0}, inuse[26] = {0};
        for(auto c : text) count[c-'a']++;
        for(auto c : text) {
            count[c-'a']--;
            if(inuse[c-'a']) continue;
            inuse[c-'a'] = 1;
            while(!res.empty() && count[res.back()-'a'] && c< res.back()) {
                inuse[res.back()-'a'] = 0;
                res.pop_back();
            }
            res.push_back(c);
        }
        return res;
    }
};
