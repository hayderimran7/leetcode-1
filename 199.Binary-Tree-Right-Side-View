/*
Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

Example:

Input: [1,2,3,null,5,null,4]
Output: [1, 3, 4]
Explanation:

   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> rst;
        rightview(root, rst, 0);
        return rst;
    }
    
    void rightview(TreeNode* root, vector<int>& rst, int depth) {
        if(!root) return;
        if(depth == rst.size()) {
            rst.push_back(root->val);
        }
        rightview(root->right, rst, depth+1);
        rightview(root->left, rst, depth+1);
    }
};
