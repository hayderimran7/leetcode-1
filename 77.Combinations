/*
Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

Example:

Input: n = 4, k = 2
Output:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]
*/

class Solution {
public:
    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>> rst;
        if(k <= 0 || k > n) return rst;
        
        vector<int> cur;
        find(n, k, 1, cur, rst);
        return rst;
    }
    
    void find(int n, int k, int s, vector<int>& cur, vector<vector<int>>& rst){
        if(cur.size() == k){
            rst.push_back(cur);
            return;
        }
        
        for(int i = s; i<= n; i++){
            cur.push_back(i);
            find(n, k, i+1, cur, rst);
            cur.pop_back();
        }
    }
};
