/*
Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.


In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

*/

class Solution {
public:
    vector<vector<int> > generate(int numRows) {
        vector<vector<int> > rst;
        if(numRows<=0) return rst;
        
        vector<int> last;
        last.push_back(1);
        
        rst.push_back(last);
        vector<int> tmp;
        for(int i = 1; i < numRows; i++){
            tmp.clear();
            tmp.push_back(1);
            for(int j = 1; j < last.size(); j++){
                tmp.push_back(last[j-1]+last[j]);
            }
            tmp.push_back(1);
            rst.push_back(tmp);
            last = tmp;
        }
        return rst;
    }
};
