/*
Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

Example 1:

Input: n = 12
Output: 3 
Explanation: 12 = 4 + 4 + 4.

Example 2:

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.

*/

/*
  DP, dp[i] for the least number of perfect square numbers of i
  has to get the number from 0 to n, dp[i] = min(dp[i], dp[i-j*j]+1), j = [1, sqrt(i)]
  because j*j count 1 number, so count left i-j*j, then plus 1
*/

class Solution {
public:
    int numSquares(int n) {
        vector<int> res(n+1, INT_MAX);
        res[0] = 0;
        for (int i = 0; i <= n; i++) {
            for (int j = 1; j * j <= i; j++) {
                res[i] = min(res[i], res[i - j * j] + 1);
            }
        }
        return res[n];
    }
};
