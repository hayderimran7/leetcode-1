/*
Given a binary tree, flatten it to a linked list in-place.

For example, given the following tree:

    1
   / \
  2   5
 / \   \
3   4   6
The flattened tree should look like:

1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if(!root) return;
        
        flat(root);
    }
    
    TreeNode* flat(TreeNode* root){
        if(!root) return NULL;

        TreeNode* left = flat(root->left);
        TreeNode* right = flat(root->right);
        
        if(left){
            TreeNode* cur = left;
            while(cur->right){
                cur = cur->right;
            }
            cur->right = right;
            root->right = left;
            root->left = NULL;
        }
        return root;
    }
};
