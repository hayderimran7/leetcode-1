/*
Implement a basic calculator to evaluate a simple expression string.

The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.

Example 1:

Input: "3+2*2"
Output: 7

Example 2:

Input: " 3/2 "
Output: 1

Example 3:

Input: " 3+5 / 2 "
Output: 5

Note:

    You may assume that the given expression is always valid.
    Do not use the eval built-in library function.

*/

/*
  when meet a operator means last number has been complete,
  push number into stack for +/-
  pop number from stack and */ current number, then push result to stack
  sum numbers in stack will be the final result
*/

class Solution {
public:
    int calculate(string s) {
        stack<long long> stk;
        char op = '+';
        int num = 0;

        for(int i = 0; i < s.length(); i++){
            if(s[i] >= '0' && s[i] <= '9'){
                num = num*10 + s[i] - '0';
            }
            if(i == s.length()-1 || s[i] == '+' || s[i] == '-'
            || s[i] == '*' || s[i] == '/') {
                switch(op) {
                    case '+': {stk.push(num); break;}
                    case '-': {stk.push(-num); break;}
                    case '*': {
                        int t = stk.top(); stk.pop();
                        stk.push(t*num); break;}
                    case '/': {
                        int t = stk.top(); stk.pop();
                        stk.push(t/num); break;}
                }
                op = s[i];
                num = 0;
            }
        }
        
        long long rst = 0;
        while(!stk.empty()){
            rst += stk.top();
            stk.pop();
        }

        return rst;
    }
};
