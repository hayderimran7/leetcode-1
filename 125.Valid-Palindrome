/*
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:

Input: "A man, a plan, a canal: Panama"
Output: true
Example 2:

Input: "race a car"
Output: false
*/

class Solution {
public:
    bool isPalindrome(string s) {
        if(s.empty()) return true;
        
        int i = 0, j = s.size()-1;
        
        while(i < j){
            if(!valid(s[i])) {
                i++; continue;
            }
            if(!valid(s[j])) {
                j--; continue;
            }
            if(turn(s[i]) != turn(s[j])) return false;
            i++;j--;
        }
        return true;
    }
    
    bool valid(char c){
        if((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
        || (c >= '0' && c <= '9')) return true;
        return false;
    }
    
    char turn(char c){
        if(c >= 'A' && c <= 'Z') return c+32;
        return c;
    }
};
