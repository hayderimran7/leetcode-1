/*
Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
*/


class Solution {
public:
    int maxProduct(vector<int>& nums) {
        if(nums.empty()) return 0;
        int maxv = nums[0], minv = nums[0], rst = nums[0];
        for(int i = 1; i < nums.size(); i++){
            int m = maxv, n = minv;
            maxv = max(max(nums[i], m*nums[i]), n*nums[i]);
            minv = min(min(nums[i], m*nums[i]), n*nums[i]);
            rst = max(rst, maxv);
        }
        return rst;
    }
};
