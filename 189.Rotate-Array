/*
Given an array, rotate the array to the right by k steps, where k is non-negative.

Example 1:

Input: [1,2,3,4,5,6,7] and k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Example 2:

Input: [-1,-100,3,99] and k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]
*/

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        k %= nums.size();
        rotatenum(nums, 0, nums.size()-1);
        rotatenum(nums, 0, k-1);
        rotatenum(nums, k, nums.size()-1);
    }
    
    void rotatenum(vector<int>& nums, int st, int ed){
        while(st < ed){
            int tmp = nums[st];
            nums[st] = nums[ed];
            nums[ed] = tmp;
            st++; ed--;
        }
    }
};
